int2mat = {  # Словарь замены символов
    'а': 'а',
    'a': 'а',
    'б': 'б',
    'b': 'б',
    '6': 'б',
    'в': 'в',
    'v': 'в',
    'г': 'г',
    'g': 'г',
    'д': 'д',
    'd': 'д',
    'е': 'е',
    'e': 'е',
    'ё': 'е',
    'ж': 'ж',
    'з': 'з',
    '3': 'з',
    'z': 'з',
    'и': 'и',
    'i': 'и',
    'й': 'й',
    'y': 'й',
    'к': 'к',
    'k': 'к',
    'л': 'л',
    'l': 'л',
    'м': 'м',
    'm': 'м',
    'н': 'н',
    'n': 'н',
    'о': 'о',
    'o': 'о',
    '0': 'о',
    'п': 'п',
    'p': 'п',
    'р': 'р',
    'r': 'р',
    'с': 'с',
    's': 'с',
    'т': 'т',
    't': 'т',
    'у': 'у',
    'u': 'у',
    'ф': 'ф',
    'f': 'ф',
    'х': 'х',
    'h': 'х',
    'x': 'х',
    'ц': 'ц',
    'c': 'ц',
    'ч': 'ч',
    '4': 'ч',
    'ш': 'ш',
    'щ': 'щ',
    'ъ': 'ъ',
    'ы': 'ы',
    'ь': 'ь',
    'э': 'э',
    'ю': 'ю',
    'я': 'я',
    ' ': ' ',
    '.': '',
    '_': '',
    '-': '',
    '*': ''
}

black_list_short = [  # Black lives matter short, сюда писать матюки в виде целых слов с пробелам по бокам
    ' бля ', ' еб ', ' ебал ', ' ебан ', ' еби ',
    ' ебла ',  ' ебли ', ' ебля ', ' ебу ', ' ебусь ',
    ' ебут '
]

black_list_long = [  # Black lives matter long
     'бляд', 'блять', 'взъеб', 'выеб', 'доеб',
     'долбоеб', 'дуроеб', 'ебало', 'ебаль', 'ебана',
     'ебане', 'ебанн', 'ебану', 'ебаные', 'ебаный',
     'ебарь', 'ебатор', 'ебать', 'ебашь', 'ебистика',
     'ебись', 'жидоеб', 'заеб', 'залуп', 'злоеб',
     'коноеб', 'манда', 'мозгоеб', 'мудак', 'мудил',
     'мудн', 'мудоеб', 'мудозвон', 'наеб', 'настоеб', 'объеб',
     'отъеб', 'пезд', 'пидор', 'пидр', 'пизд',
     'поеб', 'приеб', 'проеб', 'разъеб', 'скотоеб',
     'сука', 'уебы', 'худоеб', 'хуе', 'хуи',
     'хуй', 'хуя', 'шароеб', 'шлюха'
]

white_list = [  # Словарь исключений
     'абля', 'амуда', 'баланс', 'банал', 'барсук',
     'блям', 'блях', 'бляш', 'витебля', 'геб',
     'глубля', 'греб', 'губля', 'дебат', 'доверхуих',
     'дробля', 'ебашн', 'ербля', 'икебана', 'колеб',
     'команд', 'кордебал', 'любля', 'лябля', 'мандарин',
     'мандат', 'мандо', 'мандр', 'небы', 'обля',
     'орбля', 'перебал', 'перебы', 'плохуй', 'посука',
     'пребы', 'психуй', 'ребы', 'рубля', 'рыбля',
     'самбля', 'скреб', 'стеб', 'страх', 'талмуд',
     'тебля', 'требля', 'убля', 'улебы', 'фламанд',
     'хлеб', 'цебы', 'шибля', 'штрихуй', 'щербля', 'ыбля'
]


def mat_filter(text):
    text = text.lower()  # перевод в нижний регистр
    new_text = []  # обработанный текст

    for i in range(len(text)):  # проходим по строке сообщения
        if text[i] in int2mat.keys():  # если символ может быть заменен
            if text[i] in int2mat.values():  # если не нужно заменять
                new_text.append(text[i])  # добавляем символ в массив обработанного текста
            else:  # иначе
                value = int2mat[text[i]]  # переводим символ с помощью словаря
                new_text.append(value)  # добавляем символ в массив обработанного текста
        else:  # если не может быть заменен
            new_text.append(text[i])  # добавляем символ в массив обработанного текста

    new_text_spaces = ''.join(new_text)  # преобразуем массив символов в строку
    check = False

    for i in range(len(black_list_short)):
        if black_list_short[i] in new_text_spaces:  # если находим отдельный мат целым словом
            check = True
    if check:
        return True

    for i in range(len(black_list_long)):  # проходим по словарю мата
        if black_list_long[i] in new_text_spaces:  # если в строке есть мат
            check = True  # ставим чек ну тру
            break  # выходим из цикла

    if check:  # если до этого был найден мат, то проверяем не белое ли это слово
        for i in range(len(white_list)):  # проходим по словарю белых слов
            if white_list[i] in new_text_spaces:  # если нашли
                new_text_spaces = new_text_spaces.replace(white_list[i], "")  # удаляем его
                check = False  # переводим чек в фолс

        if not check:  # если нашли белые слова то проверяем на мат еще раз
            for i in range(len(black_list_long)):
                if black_list_long[i] in new_text_spaces:
                    check = True
                    break
    return check
